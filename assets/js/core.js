// Generated by CoffeeScript 1.6.3
(function() {
  var Rcrtmnt;

  Rcrtmnt = (function() {
    function Rcrtmnt() {}

    Rcrtmnt.prototype.init = function() {
      var login, ui;
      ui = new Rcrtmnt.ui;
      login = new Rcrtmnt.login;
      ui.build();
      login.status();
      return this.bindEvents();
    };

    Rcrtmnt.prototype.bindEvents = function() {
      var login, ui;
      ui = new Rcrtmnt.ui;
      login = new Rcrtmnt.login;
      ui.bindEvents();
      return login.bindEvents();
    };

    Rcrtmnt.prototype.setStatus = function(v) {
      return this.variables.status = v;
    };

    Rcrtmnt.prototype.getStatus = function() {
      return this.variables.status;
    };

    Rcrtmnt.prototype.setEndDate = function(v) {
      return this.variables.endDate = v;
    };

    Rcrtmnt.prototype.getEndDate = function() {
      return this.variables.endDate;
    };

    Rcrtmnt.prototype.variables = {
      app_path: 'app/',
      tpl_path: 'app/views/tpl',
      status: 0,
      endDate: ''
    };

    return Rcrtmnt;

  })();

  Rcrtmnt.ui = (function() {
    function ui() {
      var rr;
      rr = new Rcrtmnt;
      this.variables.app_path = rr.variables.app_path;
      this.variables.tpl_path = rr.variables.tpl_path;
    }

    ui.prototype.variables = {
      app_path: '',
      tpl_path: ''
    };

    ui.prototype.build = function() {
      return $('#exam-navigation').css({
        'display': 'hidden'
      });
    };

    ui.prototype.bindEvents = function() {
      var drop, logout, submit, ul, upload,
        _this = this;
      logout = $('#lnk-logout');
      logout.on('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        _this.reload();
        $('.rnd-user-nav').removeAttr('style');
        return $.post("" + _this.variables.app_path + "logout.php", {}, function(e) {
          return console.log(e);
        }).promise().always(function() {
          $('body').find('.overlay').fadeIn();
          return _this.reload();
        }).done(function() {
          return $('body').find('.overlay').fadeOut();
        });
      });
      $('#content').on('click', '#go-hard', function() {
        return _this.goHardCore();
      });
      $('#content').on('click', '.toggle-advanced', function(e) {
        var btnText;
        e.preventDefault();
        e.stopPropagation();
        btnText = $(this).text();
        if (btnText === 'toggle advanced') {
          $(this).text('toggle basic');
        } else {
          $(this).text('toggle advanced');
        }
        $(this).parents('.general').find('ol').slideToggle();
        return $(this).parents('.task-group').find('ul.advanced').slideToggle('fast', function() {
          var href, li, pos;
          li = $(this).find('li');
          href = li.attr('id');
          pos = li.offset().top - 100;
          return $('body').animate({
            scrollTop: pos
          }, 500, function() {
            return window.location.hash = href;
          });
        });
      });
      upload = $('#upload');
      submit = $('#submit');
      drop = $('#dropzone');
      ul = upload.find('ul');
      upload.find('.cancel').on('click', function(e) {
        e.preventDefault();
        return upload.toggleClass('show');
      });
      $('#lnk-submit').on('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        return upload.toggleClass('show');
      });
      upload.on('click', 'a.browse', function(e) {
        e.stopPropagation();
        e.preventDefault();
        return $('#browse').click();
      });
      submit.fileupload({
        dropZone: drop,
        add: function(e, data) {
          var jqXHR, tpl, util;
          util = new Rcrtmnt.util;
          tpl = $('<li class="working"><div class="progress"><div class="progress-bar"></div></div><p></p><span class="icon-remove"></span></li>');
          tpl.find('p').text(data.files[0].name).append('<i>' + util.formatFileSize(data.files[0].size) + '</i>');
          data.context = tpl.appendTo(ul);
          tpl.find('span').on('click', function() {
            if (tpl.hasClass('working')) {
              jqXHR.abort();
            }
            return tpl.fadeOut(function() {
              return tpl.remove();
            });
          });
          return jqXHR = data.submit().done(function(re, status, jqXHR) {
            upload.find('.result').append(re);
            return setTimeout(function() {
              return upload.find('.result').html('');
            }, 3000);
          });
        },
        progress: function(e, data) {
          var progress;
          progress = parseInt(data.loaded / data.total * 100, 10);
          data.context.find('.progress-bar').css({
            width: "" + progress + "%"
          }).change();
          if (progress === 100) {
            return setTimeout(function() {
              return data.context.remove();
            }, 3000);
          }
        },
        fail: function(e, data) {
          return data.context.addClass('error');
        }
      });
      return $(document).on('drop dragover', function(e) {
        return e.preventDefault();
      });
    };

    ui.prototype.reload = function() {
      var rr;
      rr = new Rcrtmnt;
      if (rr.getStatus() !== 1) {
        return this.loggedOut();
      } else {
        return this.loggedIn();
      }
    };

    ui.prototype.renderTemplate = function(tpl, target) {
      return $.get(tpl, function(re) {
        return $(target).html(re);
      }).done(function() {
        return $(target).toggleClass('show');
      });
    };

    ui.prototype.clearForms = function(target) {
      return $(target).find('input').val('');
    };

    ui.prototype.isOnLoginPage = function() {
      var token;
      token = $('.rnd-form').find('button').text();
      if (token.length > 0) {
        return true;
      } else {
        return false;
      }
    };

    ui.prototype.isContentLoaded = function(node) {
      if ($.trim($(node).html()).length > 0) {
        return true;
      } else {
        return false;
      }
    };

    ui.prototype.loggedIn = function() {
      var form, isExamLoaded, onLogin, onLoginHack, rr, status,
        _this = this;
      rr = new Rcrtmnt;
      onLogin = this.isContentLoaded('.rnd-form');
      onLoginHack = this.isOnLoginPage();
      isExamLoaded = this.isContentLoaded('#content');
      status = rr.getStatus();
      if (onLogin === true && status === 1) {
        form = $('.rnd-form');
        form.css({
          top: "-" + (form.height()) + "px"
        });
        form.hide().empty();
      }
      if (onLogin === false && status === 1) {
        $('.rnd-user-nav').stop().removeAttr('style').css({
          display: 'block',
          top: '40px'
        });
      }
      if (status === 1 && isExamLoaded === false) {
        return $.get("" + this.variables.app_path + "exam.php").then(function(re) {
          re = JSON.parse(re);
          return $.get("" + _this.variables.app_path + "/views/exam-cache/" + re.division + ".html").done(function(exam) {
            $('#content').html(exam).fadeIn('fast').find('.advanced').slideToggle().parent().find('.toggle-advanced').slideToggle();
            return $.get("" + _this.variables.app_path + "duration.php").done(function(re) {
              var endDate;
              rr.setEndDate(re.end_date);
              endDate = rr.getEndDate();
              console.log(rr.getEndDate());
              return $('#countdown').countdown({
                date: endDate,
                render: function(data) {
                  return $(this.el).html(data.days + " <span>days</span> " + this.leadingZeros(data.hours, 2) + " <span>hrs</span> " + this.leadingZeros(data.min, 2) + " <span>min</span> " + this.leadingZeros(data.sec, 2) + " <span>sec</span>");
                }
              });
            });
          });
        });
      }
    };

    ui.prototype.goHardCore = function() {
      var btnAdvanced, btnAdvancedText, btnAdvancedTextCurrent;
      btnAdvanced = $('#go-hard');
      btnAdvancedText = 'Go Hard Core!';
      btnAdvancedTextCurrent = btnAdvanced.text();
      if (btnAdvancedTextCurrent === btnAdvancedText) {
        btnAdvanced.text('Go Basic!');
      } else {
        btnAdvanced.text(btnAdvancedText);
      }
      $('#content').find('article.advanced').slideToggle();
      return $('.general').find('.toggle-advanced').slideToggle();
    };

    ui.prototype.loggedOut = function() {
      var content, form, onLogin, rr, status;
      rr = new Rcrtmnt;
      onLogin = this.isContentLoaded('.rnd-form');
      status = rr.getStatus();
      content = $('#content');
      if (status === 0 && onLogin === false) {
        this.renderTemplate("" + this.variables.tpl_path + "/login.tpl", '.rnd-form');
        $('.rnd-user-nav').stop().removeAttr('style').css('display', 'none');
        content.fadeOut().html('');
        form = $('.rnd-form');
        return form.css({
          top: "" + (form.height()) + "px",
          display: 'block'
        });
      }
    };

    return ui;

  })();

  Rcrtmnt.login = (function() {
    function login() {
      var rr;
      rr = new Rcrtmnt;
      this.variables.app_path = rr.variables.app_path;
      this.variables.tpl_path = rr.variables.tpl_path;
    }

    login.prototype.variables = {
      app_path: '',
      tpl_path: ''
    };

    login.prototype.bindEvents = function() {
      var form,
        _this = this;
      form = $('.rnd-form');
      return form.on('click', '#btn-login', function(e) {
        var data, login, ui;
        e.preventDefault();
        login = $('#login');
        data = login.serializeArray();
        _this.submit(data);
        ui = new Rcrtmnt.ui;
        return ui.reload();
      });
    };

    login.prototype.submit = function(data) {
      var rr, ui;
      rr = new Rcrtmnt;
      ui = new Rcrtmnt.ui;
      return $.post("" + this.variables.app_path + "login.php", data, function(re) {
        console.log(re);
        if (re === 'true') {
          rr.setStatus(1);
          ui.clearForms('.rnd-form');
          return ui.loggedIn();
        }
      }).always(function() {
        return ui.reload();
      });
    };

    login.prototype.status = function() {
      var rr, ui,
        _this = this;
      rr = new Rcrtmnt;
      ui = new Rcrtmnt.ui;
      return $.get("" + rr.variables.app_path + "status.php", function(re) {
        if (re === 'true') {
          return rr.setStatus(1);
        } else {
          return rr.setStatus(0);
        }
      }).promise().done(function() {
        return setTimeout(function() {
          return _this.status();
        }, 3000);
      }).always(function() {
        return ui.reload();
      });
    };

    return login;

  })();

  Rcrtmnt.util = (function() {
    function util() {}

    util.prototype.formatFileSize = function(bytes) {
      if (typeof bytes !== 'number') {
        return false;
      }
      if (bytes >= 1000000000) {
        retunrn((bytes / 1000000000).toFixed(2) + ' GB');
      }
      if (bytes >= 1000000) {
        return (bytes / 1000000).toFixed(2) + ' MB';
      }
      return (bytes / 1000).toFixed(2) + ' KB';
    };

    return util;

  })();

  $(document).ready(function() {
    var rr;
    rr = new Rcrtmnt;
    return rr.init();
  });

}).call(this);
